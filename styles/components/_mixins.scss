@use '../custom' as *;

// Gradient
@mixin gradient {
    background: linear-gradient(to right, rgba($color-1, 0.9), rgba($color-2, 0.9));
}

@mixin gradientInverted {
    background: linear-gradient(to left, rgba($color-1, 0.9), rgba($color-2, 0.9));
}


// Positioning
@mixin absoluteCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin flexCenter {
    display: flex;
    align-items: center;
    justify-content: center;
}


// Transition
@mixin transitionProp {
    transition-property: all;
    transition-duration: 1000ms;
}


// Buttons
@mixin hoverBtn {
    opacity: 0.75;
    transition: all 0.5s ease-in-out;
}

@mixin circleBtn {
    position: fixed;
    width: 2.8rem;
    height: 2.8rem;
    z-index: 9999;
}


// Typography
@mixin titleSm {
    font-size: 2rem;
    font-weight: 700;
}

@mixin subtitleSm {
    font-size: 1.5rem;
    font-weight: 500;
}

/* Drawing Effect */
@mixin btn-border-drawing($color: #ccc, $hover: black, $width: 2px, $vertical: top, $horizontal: left, $duration: 0.25s) {
    box-shadow: inset 0 0 0 $width $color;
    color: $color;
    transition: color $duration $duration/3;
    position: relative;

    &::before,
    &::after {
        border: 0 solid transparent;
        box-sizing: border-box;
        content: '';
        pointer-events: none;
        position: absolute;
        width: 0;
        height: 0;

        #{$vertical}: 0;
        #{$horizontal}: 0;
    }

    &::before {
        $h-side: if($horizontal =='left', 'right', 'left');

        border-#{$vertical}-width: $width;
        border-#{$h-side}-width: $width;
    }

    &::after {
        $v-side: if($vertical =='top', 'bottom', 'top');

        border-#{$v-side}-width: $width;
        border-#{$horizontal}-width: $width;
    }

    &:hover {
        color: $hover;

        &::before,
        &::after {
            border-color: $hover;
            transition: border-color 0s, width $duration, height $duration;
            width: 100%;
            height: 100%;
        }

        &::before {
            transition-delay: 0s, 0s, $duration;
        }

        &::after {
            transition-delay: 0s, $duration, 0s;
        }
    }
}